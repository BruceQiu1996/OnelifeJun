@page "/records"
@inherits LiJunSpace.ViewModels.IndexComponentViewModel;

<PageTitle>益生菌</PageTitle>
<div style="display: flex">
    <MudButton HtmlTag="label"
               Style="margin-left:auto;margin-right:10px;margin-top:10px"
               Variant="Variant.Filled"
               OnClick="NewRecord"
               Color="Color.Primary"
               StartIcon="@Icons.Material.Filled.Edit">
        发布
    </MudButton>
</div>
@if (Events != null && Events.Count > 0)
{
    <MudPaper Style="margin:10px">
        <MudList Clickable="true" T="LiJunSpace.Common.Dtos.Event.EventDto">
            @foreach (var eventItem in Events)
            {
                <MudListItem Style="height:40px;margin-top:5px">
                    <MudStack Row="true">
                        <MudAvatar>
                            <MudImage onclick="@(()=>{OpenUserDetail(eventItem.Publisher);})" Src='@($"{Program.APIEndPoint}/api/avatars/{eventItem.PublisherAvatar}")'></MudImage>
                        </MudAvatar>
                        @if (eventItem.Desc)
                        {
                            <MudText>
                                @eventItem.Title 还有<MudElement HtmlTag="a"
                                                               Class="ms-1"
                                                               Style="color:red;font-weight:bold;;font-size:22px"
                                                               target="blank"
                                                               rel="noopener noreferrer">
                                    @eventItem.Time.Subtract(DateTime.Now).Days
                                </MudElement>天
                            </MudText>
                        }
                        else
                        {
                            <MudText>
                                @eventItem.Title 已经<MudElement HtmlTag="a"
                                                               Class="ms-1"
                                                               Style="color:red;font-weight:bold;font-size:22px"
                                                               target="blank"
                                                               rel="noopener noreferrer">
                                    @DateTime.Now.Subtract(eventItem.Time).Days
                                </MudElement>天
                            </MudText>
                        }
                    </MudStack>
                </MudListItem>
            }
        </MudList>
    </MudPaper>
}

<div @ref="scrollContainer"
     id="records-scroll-container"
     style="height: calc(100vh - 150px); overflow-y: auto;" onscroll="@(async ()=>{await OnScroll();})">
    @foreach (var record in Records)
    {
        <MudCard Style="margin:10px" onclick="@(()=>{OpenRecordDetail(record);})">
            <MudCardHeader>
                <CardHeaderAvatar>
                    <MudAvatar>
                        <MudImage onclick="@(()=>{OpenUserDetail(record.PublisherId);})" Src='@($"{Program.APIEndPoint}/api/avatars/{record.PublisherAvatar}")'></MudImage>
                    </MudAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">@record.PublisherDisplayName</MudText>
                    <MudText Typo="Typo.body2" Style="@($"color:{Colors.Gray.Lighten1};")">@record.PublishTime.ToString("yyyy-MM-dd HH:mm:ss")</MudText>
                </CardHeaderContent>
            </MudCardHeader>

            @if (record.Images.Count > 1)
            {
                <MudCardContent>
                    <MudCarousel ShowBullets="false"
                                 Style="height:200px;margin:0 auto"
                                 EnableSwipeGesture="true" AutoCycle="true" TData="object">
                        @foreach (var image in record.Images)
                        {
                            <MudCarouselItem Transition="Transition.Slide">
                                <MudCardMedia Image='@($"{Program.APIEndPoint}/api/record/images/{image}")' Height="200" />
                            </MudCarouselItem>
                        }
                    </MudCarousel>
                </MudCardContent>
            }

            @if (record.Images.Count == 1)
            {
                <MudCardMedia onclick="@(()=>{OpenImageDialog(record.Images[0]);})" Image='@($"{Program.APIEndPoint}/api/record/images/{record.Images[0]}")' Height="200" />
            }

            <MudCardContent>
                <MudText Typo="Typo.body1" Style="font-weight: bold;">@record.Title</MudText>
                <MudText Typo="Typo.body2">@record.Content</MudText>
            </MudCardContent>

            <MudCardActions>
                <MudIconButton Variant="Variant.Text" Icon="@Icons.Material.Filled.Message" Color="Color.Primary" />
                <MudText Typo="Typo.body1">@record.CommentCount</MudText>
            </MudCardActions>
        </MudCard>
    }

    @if (IsLoading)
    {
        <div style="text-align: center; padding: 20px;">
            <MudProgressCircular Color="Color.Primary" Size="Size.Medium" />
        </div>
    }

    @if (!HasMoreData)
    {
        <div style="text-align: center; padding: 20px; color: var(--mud-palette-text-secondary);">
            ————————我也是有底线的————————
        </div>
    }
</div>

<MudScrollToTop TopOffset="100"
                Selector="#records-scroll-container"
                VisibleCssClass="visible"
                OnScroll="OnScroll_1"
                HiddenCssClass="invisible"
                Style="position: fixed; bottom: 35px; right: 15px; z-index: 1000;">
    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.ArrowUpward" Color="Color">Go to top</MudButton>
</MudScrollToTop>

@code {
    Color Color = Color.Success;
    private void OnScroll_1(ScrollEventArgs e)
    {
        Color = (e.FirstChildBoundingClientRect.Top * -1) switch
        {
            var x when x < 500 => Color.Primary,
            var x when x < 1500 => Color.Secondary,
            var x when x < 2500 => Color.Tertiary,
            _ => Color.Error
        };
    }
}