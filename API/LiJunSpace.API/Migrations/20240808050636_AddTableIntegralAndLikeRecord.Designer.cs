// <auto-generated />
using System;
using LiJunSpace.API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LiJunSpace.API.Migrations
{
    [DbContext(typeof(JunRecordDbContext))]
    [Migration("20240808050636_AddTableIntegralAndLikeRecord")]
    partial class AddTableIntegralAndLikeRecord
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4 ");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LiJunSpace.API.Database.Entiies.OurEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("Desc")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("ShowOnMainpage")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("UseSeconds")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Publisher");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("OpenEmailNotice")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("Sex")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Signature")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = "D9006BC9-80C6-5AC7-62EF-DC73F2FF17F0",
                            Birthday = new DateOnly(1994, 1, 12),
                            CreateTime = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "王丽君",
                            OpenEmailNotice = false,
                            Password = "FddKgJa6OWqmlIYq3ZxObQ==.ZJWP7tODXs+Hv0yRxNJ6iqwOcla2ysjULvJ0pgy50p4=",
                            Sex = false,
                            UpdateTime = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "wlj"
                        },
                        new
                        {
                            Id = "09B4A455-BE83-559B-9102-A5D61094CBC6",
                            Birthday = new DateOnly(1995, 8, 24),
                            CreateTime = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "仇伟",
                            OpenEmailNotice = false,
                            Password = "HBIH7dGSJCaATqrickjf/g==.g+41VZi2yBpR5SrlZ0b5qh18+M5E1yPnoLznSz8dpUM=",
                            Sex = true,
                            UpdateTime = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "qw"
                        });
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.CheckInRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Checker")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Checker");

                    b.ToTable("CheckInRecords");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.Comment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("PublishTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RecordId")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.HasKey("Id");

                    b.HasIndex("Publisher");

                    b.HasIndex("RecordId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.Integral", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Publisher");

                    b.ToTable("Integrals");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.LikeRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Activer")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LikeTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Passiver")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Activer");

                    b.HasIndex("Passiver");

                    b.ToTable("LikeRecords");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.Record", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Content")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("Images")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("PublishTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("Publisher");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entiies.OurEvent", b =>
                {
                    b.HasOne("LiJunSpace.API.Database.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("Publisher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.CheckInRecord", b =>
                {
                    b.HasOne("LiJunSpace.API.Database.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("Checker")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.Comment", b =>
                {
                    b.HasOne("LiJunSpace.API.Database.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("Publisher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiJunSpace.API.Database.Entities.Record", "Record")
                        .WithMany("Comments")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.Integral", b =>
                {
                    b.HasOne("LiJunSpace.API.Database.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("Publisher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.LikeRecord", b =>
                {
                    b.HasOne("LiJunSpace.API.Database.Entities.Account", "ActiveAccount")
                        .WithMany()
                        .HasForeignKey("Activer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiJunSpace.API.Database.Entities.Account", "PassiveAccount")
                        .WithMany()
                        .HasForeignKey("Passiver")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveAccount");

                    b.Navigation("PassiveAccount");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.Record", b =>
                {
                    b.HasOne("LiJunSpace.API.Database.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("Publisher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("LiJunSpace.API.Database.Entities.Record", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
